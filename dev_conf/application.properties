########### Servlet Container Configuration #############
server.port = 8200
server.session.timeout = 43200
# server.session.timeout -> in seconds : 43200 -> 12hours
tomcat.ajp.port=8100
tomcat.ajp.remoteauthentication=false
tomcat.ajp.enabled=true
server.context-path=/template
########### Servlet Container Configuration #############



########### Spring Actuator Management Connection #############
management.port=8201
management.address=127.0.0.1
management.context-path=/manage
########### Spring Actuator Management Connection #############

############# RestTemplate Configuration ######################
# using basic auth
rest.api.username=user
rest.api.password=passwd
############# RestTemplate Configuration ######################

############# ArchiveUtils Configuration ######################
archive.working.dir=/opt/dev/workspace_pe/
############# ArchiveUtils Configuration ######################

################## Mail Configuration #########################
spring.mail.host=localhost
spring.mail.port=25
spring.mail.protocol=smtp

template.mail.recipients=devcat24@github.com
template.mail.from=devcat24@github.com
template.mail.bcc=
template.mail.from-realname=
template.mail.reply-to=
################## Mail Configuration #########################

########### Login user simulation for development #############
template.auth.loginAsDevUser=false
template.auth.devUserName=devcat24
########### Login user simulation for development #############


############## FreeMarker Configuration #######################
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
# Comma-separated list of template paths.
spring.freemarker.template-loader-path = classpath:/templates/
#spring.freemarker.requestContextAttribute=rc
# spring.freemarker.requestContextAttribute ==> for 'context-path' query -> ${rc.contextPath}
############## FreeMarker Configuration #######################

template.keep.alive.ping.interval=3000

xml.sql.file=META-INF/user_defined_prop.xml



########### Spring Datasource & JPA EntityManager #############
#### fooDatasource config ####
# foo.datasource.url=jdbc:h2:file:~/h2/testdb1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#   -> creates file-based h2 db in '<${user_home}/h2/>'
#      invoke to test 'http://localhost:8080/console' & change values 'jdbc:h2:file:~/h2/testdb1' to 'JDBC URL' & Connect
# foo.datasource.url=jdbc:log4jdbc:h2:mem:testdb1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#   -> using log4jdbc

foo.datasource.url=jdbc:h2:mem:devtest2;DB_CLOSE_ON_EXIT=FALSE
foo.datasource.driverClassName=org.h2.Driver
foo.datasource.username=sa
foo.datasource.password=
#foo.datasource.url=jdbc:mysql://localhost:3306/mvc01
#foo.datasource.driverClassName=com.mysql.jdbc.Driver
#foo.datasource.username=root
#foo.datasource.password=mysql

foo.datasource.maxActive=30
foo.datasource.maxIdle=10
foo.datasource.minIdle=3
foo.datasource.initialSize=3
foo.datasource.maxWait=30000
# -> Maximum milliseconds to wait for a connection (default 30000)
foo.datasource.testOnBorrow=true
foo.datasource.validationQuery=select 1
foo.datasource.timeBetweenEvictionRunsMillis=5000
# -> how often to check idle connection (default 5000 - 5 seconds)
#spring.datasource.jmx-enabled=false
foo.datasource.maxAge=10800000
# -> Milliseconds to keep connection, if connection exceeds maxAge, it will be destroyed and be recreated (Default 0)
# Tomcat connection pool properties --> https://tomcat.apache.org/tomcat-8.0-doc/jdbc-pool.html

foo.datasource.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect
#foo.datasource.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
foo.datasource.jpa.hibernate.ddl-auto=create-drop
# Never use 'create-drop' or 'create'! Even 'create' will also drop table, if it exists on startup!
# -> Use 'validate' !
foo.datasource.jpa.hibernate.show_sql=true
foo.datasource.jpa.hibernate.format_sql=true

#### barDatasource config ####
bar.datasource.url=jdbc:h2:mem:devtest2;DB_CLOSE_ON_EXIT=FALSE
bar.datasource.driverClassName=org.h2.Driver
bar.datasource.username=sa
bar.datasource.password=
bar.datasource.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect
#bar.datasource.url=jdbc:postgresql://localhost:5432/dspace
#bar.datasource.driverClassName=org.postgresql.Driver
#bar.datasource.username=tomcat
#bar.datasource.password=tomcat
#bar.datasource.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
bar.datasource.jpa.hibernate.ddl-auto=create-drop
bar.datasource.jpa.hibernate.show_sql=true
bar.datasource.jpa.hibernate.format_sql=true

spring.h2.console.enabled=true
# Enable the console.
spring.h2.console.path=/h2-console
# Path at which the console will be available.
spring.h2.console.settings.trace=true
# Enable trace output.
spring.h2.console.settings.web-allow-others=true
# Enable remote access.

endpoints.jmx.enabled=true
########### Spring Datasource & JPA EntityManager #############



############## General LOGGING ###############################
logging.config=classpath:logback_console.xml
# Location of the logging configuration file. For instance `classpath:logback_daily_rolling.xml` for Logback
# logging.exception-conversion-word=%wEx
# Conversion word used when logging exceptions.
logging.file=logs/devtemplate_log
#logging.file=/var/log/dev-template/stdout/myapp.log
# Log file name. For instance 'myapp.log' will generate 'myapp.log.log'
logging.level.*=DEBUG
# Log levels severity mapping. For instance 'logging.level.org.springframework=DEBUG'
# logging.path=/opt/dev/logs/myapp
# Location of the log file. For instance '/var/log'
# logging.pattern.console=
# Appender pattern for output to the console. Only supported with the default logback setup.
# logging.pattern.file=.%d{yyyy-MM-dd}.log
# Appender pattern for output to the file. Only supported with the default logback setup.
# logging.pattern.level=
# Appender pattern for log level (default %5p). Only supported with the default logback setup.
# logging.register-shutdown-hook=false
# Register a shutdown hook for the logging system when it is initialized.
##############################################################
############## Performance LOGGING ###########################
timesheet.spring.service.layer.performance.logging=false
##############################################################


############### for quartz scheduling ###############################
spring.template.quartz.job1.cron=0 9,19,29,39,49,59 * * * ?
#####################################################################

