########### Servlet Container Configuration #############
server.port = 8200
server.session.timeout = 43200
# server.session.timeout -> in seconds : 43200 -> 12hours
tomcat.ajp.port=8100
tomcat.ajp.remoteauthentication=false
tomcat.ajp.enabled=true
server.context-path=/template
########### Servlet Container Configuration #############



########### Spring Actuator Management Connection #############
management.port=8201
management.address=127.0.0.1
management.context-path=/manage
########### Spring Actuator Management Connection #############





########### Spring Datasource & JPA EntityManager #############
# foo.datasource.url=jdbc:h2:file:~/h2/testdb1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#   -> creates file-based h2 db in '<${user_home}/h2/>'
#      invoke to test 'http://localhost:8080/console' & change values 'jdbc:h2:file:~/h2/testdb1' to 'JDBC URL' & Connect
# foo.datasource.url=jdbc:log4jdbc:h2:mem:testdb1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#   -> using log4jdbc
foo.datasource.url=jdbc:mysql://localhost:3306/mvc01
foo.datasource.driverClassName=com.mysql.jdbc.Driver
foo.datasource.username=root
foo.datasource.password=mysql
foo.datasource.maxActive=30
foo.datasource.maxIdle=10
foo.datasource.minIdle=3
foo.datasource.initialSize=3
foo.datasource.maxWait=30000
# -> Maximum milliseconds to wait for a connection (default 30000)
foo.datasource.testOnBorrow=true
foo.datasource.validationQuery=select 1
foo.datasource.timeBetweenEvictionRunsMillis=5000
# -> how often to check idle connection (default 5000 - 5 seconds)
#spring.datasource.jmx-enabled=false
foo.datasource.maxAge=10800000
# -> Milliseconds to keep connection, if connection exceeds maxAge, it will be destroyed and be recreated (Default 0)
# Tomcat connection pool properties --> https://tomcat.apache.org/tomcat-8.0-doc/jdbc-pool.html
foo.datasource.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
foo.datasource.jpa.hibernate.ddl-auto=validate
# Never use 'create-drop' or 'create'! Even 'create' will also drop table, if it exists on startup!
# -> Use 'validate' !
foo.datasource.jpa.hibernate.show_sql=true
foo.datasource.jpa.hibernate.format_sql=true


bar.datasource.url=jdbc:postgresql://localhost:5432/dspace
bar.datasource.driverClassName=org.postgresql.Driver
bar.datasource.username=tomcat
bar.datasource.password=tomcat
bar.datasource.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
bar.datasource.jpa.hibernate.ddl-auto=validate
bar.datasource.jpa.hibernate.show_sql=true
bar.datasource.jpa.hibernate.format_sql=true

spring.h2.console.enabled=true
# Enable the console.
spring.h2.console.path=/h2-console
# Path at which the console will be available.
spring.h2.console.settings.trace=true
# Enable trace output.
spring.h2.console.settings.web-allow-others=true
# Enable remote access.

endpoints.jmx.enabled=true
########### Spring Datasource & JPA EntityManager #############



